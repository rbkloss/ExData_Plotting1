L = chol(M)
L%*%t(L) == M
L%*%t(L)
View(L)
View(M)
M= matrix(c(4,12,-16,12,37,-43,-16,-43,98),nrow=3,ncol=3)
L = chol(M)
L%*%t(L)
View(M)
View(L)
t(L)%*%L
?cholesky
?chol
M= matrix(c(4,12,-16,12,37,-43,-16,-43,98),nrow=3,ncol=3)
L = chol(M)
t(L)%*%L
temp <- svd(t(L))
D <- diag(temp$d)
U <- temp$u
sortedLambda <- sort(D, decreasing=T)
View(D)
?diag
?PCA
??PCA
instal.('FactoMiningR')
instal('FactoMiningR')
.instal('FactoMiningR')
.instal('FactoMineR')
M= matrix(c(4,12,-16,12,37,-43,-16,-43,98),nrow=3,ncol=3)
L = chol(M)
t(L)%*%L
temp <- svd(t(L))
D <- temp$d
U <- temp$u
?sort
?order
U[sort(order(D)[U,])]
M= matrix(c(4,12,-16,12,37,-43,-16,-43,98),nrow=3,ncol=3)
L = chol(M)
t(L)%*%L
temp <- svd(t(L))
D <- temp$d
U <- temp$u
len = length(D)
i = 1;
U[sort(order(D)[U,])]
U[sort(order(D)[U])]
order(D)
order(D, decreasing= T)
lambdaOrder = order(D, decreasing= T)
M= matrix(c(4,12,-16,12,37,-43,-16,-43,98),nrow=3,ncol=3)
L = chol(M)
t(L)%*%L
temp <- svd(t(L))
D <- temp$d
U <- temp$u
len = length(D)
i = 1;
lambdaOrder = order(D, decreasing= T)
U[,lambdaOrder]
View(U)
funcPCA = function(M){
L = chol(M)
t(L)%*%L
temp <- svd(t(L))
D <- temp$d
U <- temp$u
len = length(D)
#sort the eigenvector by their eigenvalues and chooses enough to have k% of information
lambdaOrder = order(D, decreasing= T)
D = d[lambdaOrder]
U = U[,lambdaOrder]
eigen.vectors = U
eigen.values = D
return eigen
}
funcPCA = function(M){
L = chol(M)
t(L)%*%L
temp <- svd(t(L))
D <- temp$d
U <- temp$u
len = length(D)
#sort the eigenvector by their eigenvalues and chooses enough to have k% of information
lambdaOrder = order(D, decreasing= T)
D = d[lambdaOrder]
U = U[,lambdaOrder]
eigen.vectors = U
eigen.values = D
return(eigen)
}
?princomp
#####PCA Análise Fatorial
#Q1
iris
dim(iris)
names(iris)
plot(iris[,3], iris[,4])
plot(iris$Petal.Length, iris$Petal.Width, pch=21,
bg=c("red","green3","blue")[unclass(iris$Species)])
setosa <- iris[iris$Species == "setosa", 1:4]
plot(setosa)
mean(setosa)
cov(setosa)
cor(setosa)
plot(iris[,3], iris[,4])
plot(iris$Petal.Length, iris$Petal.Width, pch=21,
bg=c("red","green3","blue")[unclass(iris$Species)])
setosa <- iris[iris$Species == "setosa", 1:4]
plot(setosa)
mean(setosa)
cov(setosa)
cor(setosa)
cov(iris)
S = matrix(2,2,c(0.124,.0992,.0992,.143))
View(S)
S = matrix(nrow=2,ncol=2,c(0.124,.0992,.0992,.143))
View(S)
u = mean(setosa.Sepal.Length)
u = mean(setosa$Sepal.Length)
u = c(mean(setosa$Sepal.Length), mean(setosa$Sepal.Width))
?normal
??normal
??normal
??normal multi
??"normal multi"
??"normal multivariate"
??"multivariate normal"
dmvnorm(x,mean,sigma)
dmvnorm(x, u, S)
library(mvtnorm)
install.packages("mvtnorm")
mean(setosa)
iris
dim(iris)
names(iris)
plot(iris[,3], iris[,4])
plot(iris$Petal.Length, iris$Petal.Width, pch=21,
bg=c("red","green3","blue")[unclass(iris$Species)])
setosa <- iris[iris$Species == "setosa", 1:4]
plot(setosa)
mean(setosa)
cov(setosa)#'S' covariancia
cor(setosa)
#Sepal Length e Sepal Width são os grupos mais correlacionados
#dist do subvetor (X1,X2)
S = matrix(nrow=2,ncol=2,c(0.124,.0992,.0992,.143))
u = c(mean(setosa$Sepal.Length), mean(setosa$Sepal.Width))
library(mvtnorm)
dmvnorm(x, u, S)
mean(setosa)
setosa.mean = c(mean(setosa$Sepal.Length),mean(setosa$Sepal.Width),mean(setosa$Petal.Length),mean(setosa$Petal.Width))
install.packages("swirl")
install.packages(c("ggplot2", "cluster", "curl"))
library(swirl)
install_from_swirl("Exploratory Data Analysis")
q
library("yaml", lib.loc="D:/R-3.2.1/library")
detach("package:yaml", unload=TRUE)
data = read.csv(file = "household_power_consumption.txt", header = T,sep =';', strip.white = T)
setwd("~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master")
data = read.csv(file = "household_power_consumption.txt", header = T,sep =';', strip.white = T)
m = data.matrix()
p1Data = read.csv(file = "household_power_consumption.txt", header = T,sep =';', strip.white = T)
setwd("~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master")
p1Data = read.csv(file = "household_power_consumption.txt", header = T,sep =';', strip.white = T)
glbActivePower = p1Data$Global_active_power
hist(glbActivePower)
hist(as.matrix(glbActivePower))
glbActivePower = as.matrix(glbActivePower)
?subset
?strptime
p1Data$Date = as.Date(p1Data$Date)
?as.Date
d = p1Data$Date
view(d)
delete(d)
remove(d)
?as.Date
p1Data$Date = as.Date(p1Data$Date, "%d%b%Y")
d = p1Data$Date
remove(d)
p1Data$Date = as.Date(p1Data$Date, "%d%b%Y")
p1Data = read.csv(file = "household_power_consumption.txt", header = T,sep =';', strip.white = T)
d = p1Data$Date
d = as.Date(d, "%d%b%Y")
d = p1Data$Date
d = as.Date(d, "%d/%m/%Y")
?strptime
d = p1Data$Date
d = as.Date(x = d, "%m/%d/%Y")
d = p1Data$Date
d = as.Date(x = d, "%m/%d/%Y")
View(p1Data)
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?',
colClasses = c("character", "character", rep("numeric", 7))
)
subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
subset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
remove(subset)
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
Time
?paste
d = p1Data$Date
d =  strptime(d, "%d/%m/%Y %H:%M:%S")
d = p1Data$Date
d = timeSubset$Date
d =  strptime(d, "%d/%m/%Y %H:%M:%S")
d = paste(timeSubset$Date, Time)
d = timeSubset$Date
?rownames
hist(timeSubset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks = 12, ylim = c(0, 1200))
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot1.R', echo=TRUE)
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot2.R', echo=TRUE)
plot(timeSubset$DateTime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
setwd("~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master")
plotname = "plot2.png"
###Common Reading structure
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?',
colClasses = c("character", "character", rep("numeric", 7))
)
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
png(filename = plotname,
plot(timeSubset$DateTime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
)
plot(timeSubset$DateTime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
plot(timeSubset$Date, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot1.R', echo=TRUE)
data = read.csv(file = "household_power_consumption.txt", header = T,sep =';', strip.white = T)
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot1.R', echo=TRUE)
hist(timeSubset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks = 12, ylim = c(0, 1200))
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
png(filename = "plot1.png",
)
hist(
timeSubset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks = 12, ylim = c(0, 1200)
)
dev.off()
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
hist(
timeSubset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks = 12, ylim = c(0, 1200)
)
setwd("~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master")
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?'
)
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
hist(
timeSubset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks = 12, ylim = c(0, 1200)
)
datetime = paste(timeSubset$Date, timeSubset$Time)
plot(datetime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
datetime = strptime(x, "%d/%m/%Y %H:%M:%S")
datetime = strptime(datetime, "%d/%m/%Y %H:%M:%S")
plot(datetime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)")
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot2.R', echo=TRUE)
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot2.R', echo=TRUE)
?strptime
plot(
datetime, timeSubset$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy sub metering",
col = "black"
)
lines(
datetime, timeSubset$Sub_metering_2,
col = "red"
)
lines(
datetime, timeSubset$Sub_metering_3,
col = "blue"
)
dev.off()
windows()
window()
setwd("~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master")
plotname = "plot3.png"
###Common Reading structure
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?'
)
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
###################################
datetime = paste(timeSubset$Date, timeSubset$Time)
datetime = strptime(datetime, "%d/%m/%Y %H:%M:%S")
plot(
datetime, timeSubset$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy sub metering",
col = "black"
)
lines(
datetime, timeSubset$Sub_metering_2,
col = "red"
)
lines(
datetime, timeSubset$Sub_metering_3,
col = "blue"
)
legend("topright",  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch='-'  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch='-',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch='--',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", pch='--',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
source('~/Docs/Development/Codes/R/Coursera/Exploratory Data Analysis/p1/ExData_Plotting1-master/plot3.R', echo=TRUE)
mfrow = 4
mpfrow = c(2,2)
?with
plotname = "plot4.png"
###Common Reading structure
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?'
)
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?'
)
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
datetime = paste(timeSubset$Date, timeSubset$Time)
datetime = strptime(datetime, "%d/%m/%Y %H:%M:%S")
par(mpfrow = c(2,2))
with(timeSubset, {
plot(
datetime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
plot(
datetime, timeSubset$Voltage ,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
plot(
datetime, timeSubset$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Global Active Power",
col = "black"
)
legend("topright", pch='-',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
}
)
with(timeSubset, {
par(mpfrow = c(2,2))
plot(
datetime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
plot(
datetime, timeSubset$Voltage ,
type = "l",
xlab = "",
ylab = "Voltage"
)
plot(
datetime, timeSubset$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy sub metering",
col = "black"
)
lines(
datetime, timeSubset$Sub_metering_2,
col = "red"
)
lines(
datetime, timeSubset$Sub_metering_3,
col = "blue"
)
legend("topright", pch='-',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(
datetime, timeSubset$Global_reactive_power,
type = "l",
xlab = "",
ylab = "Global_reactive_power"
)
}
)
with(timeSubset, {
par(mfrow = c(2,2))
plot(
datetime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
plot(
datetime, timeSubset$Voltage ,
type = "l",
xlab = "",
ylab = "Voltage"
)
plot(
datetime, timeSubset$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy sub metering",
col = "black"
)
lines(
datetime, timeSubset$Sub_metering_2,
col = "red"
)
lines(
datetime, timeSubset$Sub_metering_3,
col = "blue"
)
legend("topright", pch='-',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(
datetime, timeSubset$Global_reactive_power,
type = "l",
xlab = "",
ylab = "Global_reactive_power"
)
}
)
plotname = "plot4.png"
###Common Reading structure
p1Data = read.table(
file = "household_power_consumption.txt", header = T,sep =';', na= '?'
)
timeSubset = subset(p1Data, Date == "1/2/2007" | Date == "2/2/2007")
png(filename = plotname,
width = 480, height = 480,
units = "px")
###################################
datetime = paste(timeSubset$Date, timeSubset$Time)
datetime = strptime(datetime, "%d/%m/%Y %H:%M:%S")
with(timeSubset, {
par(mfrow = c(2,2))
plot(
datetime, timeSubset$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
plot(
datetime, timeSubset$Voltage ,
type = "l",
xlab = "",
ylab = "Voltage"
)
plot(
datetime, timeSubset$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy sub metering",
col = "black"
)
lines(
datetime, timeSubset$Sub_metering_2,
col = "red"
)
lines(
datetime, timeSubset$Sub_metering_3,
col = "blue"
)
legend("topright", pch='-',  col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(
datetime, timeSubset$Global_reactive_power,
type = "l",
xlab = "",
ylab = "Global_reactive_power"
)
}
)
dev.off()
